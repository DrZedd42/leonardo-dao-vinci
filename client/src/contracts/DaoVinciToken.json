{
  "contractName": "DaoVinciToken",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proxyRegistryAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "208:1331:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;208:1331:1;;;;;;;",
  "deployedSourceMap": "208:1331:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:131:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;856:131:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;856:131:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3944:151:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3944:151:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3944:151:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3367:292:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3367:292:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499:180;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5499:180:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5499:180:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;657:132:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;657:132:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;657:132:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6318::13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6318:132:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6318:132:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2769:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2769:177:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2769:177:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2395:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2395:150:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2395:150:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1438:137:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1438:137:11;;;;;;1858:205:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1858:205:13;;;;;;750:77:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;750:77:11;;;;;;;;;;;;;;;;;;;;;;;;;;;1070:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1070:90:11;;;;;;;;;;;;;;;;;;;;;;;;;;;646::7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:90:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;646:90:7;;;;;;;;;;;;;;;;;;;;;;742:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;742:75:7;;;;;;4387:213:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4387:213:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4387:213:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;533:107:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;533:107:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;533:107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7155:211:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7155:211:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7155:211:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7155:211:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7155:211:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7155:211:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7155:211:13;;;;;;;;;;;;;;;;;;388:131:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;388:131:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;388:131:1;;;;;;;;;;;;;;;;;;;;;;583:191;;8:9:-1;5:2;;;30:1;27;20:12;5:2;583:191:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;583:191:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;583:191:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;780:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;780:143:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;780:143:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:425;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1112:425:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1112:425:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:107:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1746:107:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1746:107:11;;;;;;;;;;;;;;;;;;;;;;856:131:8;924:4;947:20;:33;968:11;947:33;;;;;;;;;;;;;;;;;;;;;;;;;;;940:40;;856:131;;;:::o;3944:151:13:-;4003:7;4030:16;4038:7;4030;:16::i;:::-;4022:25;;;;;;;;4064:15;:24;4080:7;4064:24;;;;;;;;;;;;;;;;;;;;;4057:31;;3944:151;;;:::o;3367:292::-;3430:13;3446:16;3454:7;3446;:16::i;:::-;3430:32;;3486:5;3480:11;;:2;:11;;;;3472:20;;;;;;;;3524:5;3510:19;;:10;:19;;;:58;;;;3533:35;3550:5;3557:10;3533:16;:35::i;:::-;3510:58;3502:67;;;;;;;;3607:2;3580:15;:24;3596:7;3580:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3644:7;3640:2;3624:28;;3633:5;3624:28;;;;;;;;;;;;3367:292;;;:::o;5499:180::-;5589:39;5608:10;5620:7;5589:18;:39::i;:::-;5581:48;;;;;;;;5640:32;5654:4;5660:2;5664:7;5640:13;:32::i;:::-;5499:180;;;:::o;657:132:14:-;727:4;488:20:7;497:10;488:8;:20::i;:::-;480:29;;;;;;;;743:18:14;749:2;753:7;743:5;:18::i;:::-;778:4;771:11;;657:132;;;;:::o;6318::13:-;6404:39;6421:4;6427:2;6431:7;6404:39;;;;;;;;;;;;;:16;:39::i;:::-;6318:132;;;:::o;2769:177::-;2824:7;2843:13;2859:11;:20;2871:7;2859:20;;;;;;;;;;;;;;;;;;;;;2843:36;;2914:1;2897:19;;:5;:19;;;;2889:28;;;;;;;;2934:5;2927:12;;;2769:177;;;:::o;2395:150::-;2450:7;2494:1;2477:19;;:5;:19;;;;2469:28;;;;;;;;2514:17;:24;2532:5;2514:24;;;;;;;;;;;;;;;;2507:31;;2395:150;;;:::o;1438:137:11:-;954:9;:7;:9::i;:::-;946:18;;;;;;;;1536:1;1499:40;;1520:6;;;;;;;;;;;1499:40;;;;;;;;;;;;1566:1;1549:6;;:19;;;;;;;;;;;;;;;;;;1438:137::o;1858:205:13:-;1024:12:18;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1909:19:13;:17;:19::i;:::-;2016:40;1224:10;2035:20;;2016:18;:40::i;:::-;1243:15:18;1228:12;;:30;;;;;;;;;;;;;;;;;;1858:205:13;:::o;750:77:11:-;788:7;814:6;;;;;;;;;;;807:13;;750:77;:::o;1070:90::-;1110:4;1147:6;;;;;;;;;;;1133:20;;:10;:20;;;1126:27;;1070:90;:::o;646::7:-;488:20;497:10;488:8;:20::i;:::-;480:29;;;;;;;;710:19;721:7;710:10;:19::i;:::-;646:90;:::o;742:75::-;785:25;799:10;785:13;:25::i;:::-;742:75::o;4387:213:13:-;4472:10;4466:16;;:2;:16;;;;4458:25;;;;;;;;4530:8;4493:18;:30;4512:10;4493:30;;;;;;;;;;;;;;;:34;4524:2;4493:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4580:2;4553:40;;4568:10;4553:40;;;4584:8;4553:40;;;;;;;;;;;;;;;;;;;;;;4387:213;;:::o;533:107:7:-;589:4;612:21;625:7;612:8;:12;;:21;;;;:::i;:::-;605:28;;533:107;;;:::o;7155:211:13:-;7261:31;7274:4;7280:2;7284:7;7261:12;:31::i;:::-;7310:48;7333:4;7339:2;7343:7;7352:5;7310:22;:48::i;:::-;7302:57;;;;;;;;7155:211;;;;:::o;388:131:1:-;1024:12:18;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;491:21:1;468:20;;:44;;;;;;;;;;;;;;;;;;1243:15:18;1228:12;;:30;;;;;;;;;;;;;;;;;;388:131:1;;:::o;583:191::-;640:13;672:95;703:14;:12;:14::i;:::-;731:26;748:8;731:16;:26::i;:::-;672:17;:95::i;:::-;665:102;;583:191;;;:::o;780:143::-;825:13;850:66;;;;;;;;;;;;;;;;;;;;;;;;;780:143;:::o;1112:425::-;1226:4;1308:27;1352:20;;;;;;;;;;;1308:65;;1428:8;1387:49;;1395:13;:21;;;1417:5;1395:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1395:28:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1395:28:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1395:28:1;;;;;;;;;;;;;;;;1387:49;;;1383:91;;;1459:4;1452:11;;;;;1383:91;1491:39;1514:5;1521:8;1491:22;:39::i;:::-;1484:46;;;1112:425;;;;;:::o;1746:107:11:-;954:9;:7;:9::i;:::-;946:18;;;;;;;;1818:28;1837:8;1818:18;:28::i;:::-;1746:107;:::o;7555:152:13:-;7612:4;7628:13;7644:11;:20;7656:7;7644:20;;;;;;;;;;;;;;;;;;;;;7628:36;;7698:1;7681:19;;:5;:19;;;;7674:26;;;7555:152;;;:::o;8070:246::-;8155:4;8171:13;8187:16;8195:7;8187;:16::i;:::-;8171:32;;8232:5;8221:16;;:7;:16;;;:51;;;;8265:7;8241:31;;:20;8253:7;8241:11;:20::i;:::-;:31;;;8221:51;:87;;;;8276:32;8293:5;8300:7;8276:16;:32::i;:::-;8221:87;8213:96;;;8070:246;;;;:::o;10058:402::-;10171:4;10151:24;;:16;10159:7;10151;:16::i;:::-;:24;;;10143:33;;;;;;;;10208:1;10194:16;;:2;:16;;;;10186:25;;;;;;;;10222:23;10237:7;10222:14;:23::i;:::-;10282:30;10310:1;10282:17;:23;10300:4;10282:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10256:17;:23;10274:4;10256:23;;;;;;;;;;;;;;;:56;;;;10346:28;10372:1;10346:17;:21;10364:2;10346:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;10322:17;:21;10340:2;10322:21;;;;;;;;;;;;;;;:52;;;;10408:2;10385:11;:20;10397:7;10385:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10445:7;10441:2;10426:27;;10435:4;10426:27;;;;;;;;;;;;10058:402;;;:::o;8559:278::-;8644:1;8630:16;;:2;:16;;;;8622:25;;;;;;;;8666:16;8674:7;8666;:16::i;:::-;8665:17;8657:26;;;;;;;;8717:2;8694:11;:20;8706:7;8694:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8753:28;8779:1;8753:17;:21;8771:2;8753:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;8729:17;:21;8747:2;8729:21;;;;;;;;;;;;;;;:52;;;;8822:7;8818:2;8797:33;;8814:1;8797:33;;;;;;;;;;;;8559:278;;:::o;1349:467:18:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;667:98:8:-;1024:12:18;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;718:40:8;297:10;737:20;;718:18;:40::i;:::-;1243:15:18;1228:12;;:30;;;;;;;;;;;;;;;;;;667:98:8;:::o;1066:158::-;1156:10;1141:25;;:11;:25;;;;;1133:34;;;;;;;;1213:4;1177:20;:33;1198:11;1177:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1066:158;:::o;823:119:7:-;879:21;892:7;879:8;:12;;:21;;;;:::i;:::-;927:7;915:20;;;;;;;;;;;;823:119;:::o;948:127::-;1007:24;1023:7;1007:8;:15;;:24;;;;:::i;:::-;1060:7;1046:22;;;;;;;;;;;;948:127;:::o;786:162:6:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;10983:347:13:-;11104:4;11129:15;:2;:13;;;:15::i;:::-;11128:16;11124:58;;;11167:4;11160:11;;;;11124:58;11192:13;11224:2;11208:36;;;11245:10;11257:4;11263:7;11272:5;11208:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11208:70:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11208:70:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11208:70:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11208:70:13;;;;;;;;;;;;;;;;11192:86;;719:10;11306:16;;11296:26;;;:6;:26;;;;11288:35;;;10983:347;;;;;;;:::o;1532:465:4:-;1582:27;1631:1;1625:2;:7;1621:48;;;1648:10;;;;;;;;;;;;;;;;;;;;;;1621:48;1678:6;1687:2;1678:11;;1699:8;1717:66;1729:1;1724;:6;;1717:66;;;1746:5;;;;;;;1770:2;1765:7;;;;;;;;;;;1717:66;;;1792:17;1822:3;1812:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;1812:14:4;;;;1792:34;;1836:6;1851:1;1845:3;:7;1836:16;;1862:100;1875:1;1869:2;:7;;1862:100;;;1925:2;1920;:7;;;;;;;;1915:2;:12;1904:25;;1892:4;1897:3;;;;;;;1892:9;;;;;;;;;;;;;;:37;;;;;;;;;;;1949:2;1943:8;;;;;;;;;;;1862:100;;;1985:4;1971:19;;;;;;1532:465;;;;:::o;1380:146::-;1458:13;1490:29;1500:2;1504;1490:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;1483:36;;1380:146;;;;:::o;4921:145:13:-;5001:4;5024:18;:25;5043:5;5024:25;;;;;;;;;;;;;;;:35;5050:8;5024:35;;;;;;;;;;;;;;;;;;;;;;;;;5017:42;;4921:145;;;;:::o;1997:183:11:-;2090:1;2070:22;;:8;:22;;;;2062:31;;;;;;;;2137:8;2108:38;;2129:6;;;;;;;;;;;2108:38;;;;;;;;;;;;2165:8;2156:6;;:17;;;;;;;;;;;;;;;;;;1997:183;:::o;11491:171:13:-;11590:1;11554:38;;:15;:24;11570:7;11554:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11550:106;;;11643:1;11608:15;:24;11624:7;11608:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11550:106;11491:171;:::o;1205:145:10:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;1431:::-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;259:181:6:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;463:616:17:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;131:885:4:-;263:13;288:16;313:2;288:28;;326:16;351:2;326:28;;364:16;389:2;364:28;;402:16;427:2;402:28;;440:16;465:2;440:28;;478:19;563:3;:10;550:3;:10;537:3;:10;524:3;:10;511:3;:10;:23;:36;:49;:62;500:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;500:74:4;;;;478:96;;584:19;612:5;584:34;;628:6;637:1;628:10;;653:6;662:1;653:10;;648:58;669:3;:10;665:1;:14;648:58;;;700:3;704:1;700:6;;;;;;;;;;;;;;;;;;;;686;693:3;;;;;;686:11;;;;;;;;;;;;;;:20;;;;;;;;;;;681:3;;;;;;;648:58;;;;721:6;730:1;721:10;;716:58;737:3;:10;733:1;:14;716:58;;;768:3;772:1;768:6;;;;;;;;;;;;;;;;;;;;754;761:3;;;;;;754:11;;;;;;;;;;;;;;:20;;;;;;;;;;;749:3;;;;;;;716:58;;;;789:6;798:1;789:10;;784:58;805:3;:10;801:1;:14;784:58;;;836:3;840:1;836:6;;;;;;;;;;;;;;;;;;;;822;829:3;;;;;;822:11;;;;;;;;;;;;;;:20;;;;;;;;;;;817:3;;;;;;;784:58;;;;857:6;866:1;857:10;;852:58;873:3;:10;869:1;:14;852:58;;;904:3;908:1;904:6;;;;;;;;;;;;;;;;;;;;890;897:3;;;;;;890:11;;;;;;;;;;;;;;:20;;;;;;;;;;;885:3;;;;;;;852:58;;;;925:6;934:1;925:10;;920:58;941:3;:10;937:1;:14;920:58;;;972:3;976:1;972:6;;;;;;;;;;;;;;;;;;;;958;965:3;;;;;;958:11;;;;;;;;;;;;;;:20;;;;;;;;;;;953:3;;;;;;;920:58;;;;1002:6;988:21;;;;;;;;;;131:885;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-eth/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-eth/contracts/token/ERC721/ERC721Mintable.sol\";\nimport \"./ProxyRegistry.sol\";\nimport './Strings.sol';\n\ncontract DaoVinciToken is ERC721Mintable, Ownable {\n    // Used\n    address proxyRegistryAddress;\n\n    // Zepkit has a pattern of initializing instead of constructing instance\n    function initialize(address _proxyRegistryAddress) initializer public {\n        proxyRegistryAddress = _proxyRegistryAddress;\n    }\n\n  /**\n   * @dev Returns an URI for a given token ID\n   */\n    function tokenURI(uint256 _tokenId) public view returns (string memory) {\n        return Strings.strConcat(\n            baseTokenURI(),\n            Strings.uint2str(_tokenId)\n        );\n    }\n\n    function baseTokenURI() public view returns (string memory) {\n        return \"https://opensea-creatures-api.herokuapp.com/api/creature/\";\n    }\n\n  /**\n   * Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.\n   * https://docs.opensea.io/docs/1-structuring-your-smart-contract\n   */\n    function isApprovedForAll(\n        address owner,\n        address operator\n    )\n    public\n    view\n    returns (bool)\n    {\n        // Whitelist OpenSea proxy contract for easy trading.\n        ProxyRegistry proxyRegistry = ProxyRegistry(proxyRegistryAddress);\n        if (address(proxyRegistry.proxies(owner)) == operator) {\n            return true;\n        }\n\n        return super.isApprovedForAll(owner, operator);\n    }\n}\n",
  "sourcePath": "/Users/stephenjackson/Code/Ethereum/leonardo-dao-vinci/contracts/DaoVinciToken.sol",
  "ast": {
    "absolutePath": "/Users/stephenjackson/Code/Ethereum/leonardo-dao-vinci/contracts/DaoVinciToken.sol",
    "exportedSymbols": {
      "DaoVinciToken": [
        139
      ]
    },
    "id": 140,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 56,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-eth/contracts/ownership/Ownable.sol",
        "id": 57,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 1034,
        "src": "25:58:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 58,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 1741,
        "src": "84:68:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/stephenjackson/Code/Ethereum/leonardo-dao-vinci/contracts/ProxyRegistry.sol",
        "file": "./ProxyRegistry.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 151,
        "src": "153:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/stephenjackson/Code/Ethereum/leonardo-dao-vinci/contracts/Strings.sol",
        "file": "./Strings.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 474,
        "src": "183:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1740,
              "src": "234:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$1740",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "234:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1033,
              "src": "250:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1033",
                "typeString": "contract Ownable"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "250:7:1"
          }
        ],
        "contractDependencies": [
          716,
          776,
          786,
          1033,
          1685,
          1740,
          1846,
          1937
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 139,
        "linearizedBaseContracts": [
          139,
          1033,
          1740,
          716,
          1685,
          1846,
          776,
          786,
          1937
        ],
        "name": "DaoVinciToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 66,
            "name": "proxyRegistryAddress",
            "nodeType": "VariableDeclaration",
            "scope": 139,
            "src": "276:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 65,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "458:61:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "468:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "491:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "468:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "468:44:1"
                }
              ]
            },
            "documentation": null,
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 71,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 70,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1918,
                  "src": "439:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "439:11:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "408:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "407:31:1"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:1"
            },
            "scope": 139,
            "src": "388:131:1",
            "stateMutability": "nonpayable",
            "superFunction": 946,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "655:119:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87,
                          "name": "baseTokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "703:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view returns (string memory)"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "703:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 91,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "748:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 89,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 473,
                            "src": "731:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$473_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 472,
                          "src": "731:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "731:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "672:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$473_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strConcat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "672:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "672:95:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 84,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "665:102:1"
                }
              ]
            },
            "documentation": "@dev Returns an URI for a given token ID",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "601:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "600:18:1"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "640:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "639:15:1"
            },
            "scope": 139,
            "src": "583:191:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "840:83:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "68747470733a2f2f6f70656e7365612d6372656174757265732d6170692e6865726f6b756170702e636f6d2f6170692f63726561747572652f",
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "857:59:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b106c575404f790e4882ef772ce7c4fc1e1ad6500c34c8f127eaf119506874b7",
                      "typeString": "literal_string \"https://opensea-creatures-api.herokuapp.com/api/creature/\""
                    },
                    "value": "https://opensea-creatures-api.herokuapp.com/api/creature/"
                  },
                  "functionReturnParameters": 100,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "850:66:1"
                }
              ]
            },
            "documentation": null,
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "801:2:1"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "825:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "824:15:1"
            },
            "scope": 139,
            "src": "780:143:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "1236:301:1",
              "statements": [
                {
                  "assignments": [
                    114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 114,
                      "name": "proxyRegistry",
                      "nodeType": "VariableDeclaration",
                      "scope": 137,
                      "src": "1308:27:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ProxyRegistry_$150",
                        "typeString": "contract ProxyRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 113,
                        "name": "ProxyRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 150,
                        "src": "1308:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProxyRegistry_$150",
                          "typeString": "contract ProxyRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 118,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "proxyRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1352:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 115,
                      "name": "ProxyRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "1338:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ProxyRegistry_$150_$",
                        "typeString": "type(contract ProxyRegistry)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProxyRegistry_$150",
                      "typeString": "contract ProxyRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1308:65:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 122,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "1417:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 120,
                              "name": "proxyRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 114,
                              "src": "1395:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ProxyRegistry_$150",
                                "typeString": "contract ProxyRegistry"
                              }
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proxies",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 149,
                            "src": "1395:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_OwnableDelegateProxy_$142_$",
                              "typeString": "function (address) view external returns (contract OwnableDelegateProxy)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1395:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OwnableDelegateProxy_$142",
                            "typeString": "contract OwnableDelegateProxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OwnableDelegateProxy_$142",
                            "typeString": "contract OwnableDelegateProxy"
                          }
                        ],
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1387:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1387:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 125,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "1428:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1387:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 130,
                  "nodeType": "IfStatement",
                  "src": "1383:91:1",
                  "trueBody": {
                    "id": 129,
                    "nodeType": "Block",
                    "src": "1438:36:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1459:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 112,
                        "id": 128,
                        "nodeType": "Return",
                        "src": "1452:11:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1514:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "1521:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1998,
                        "src": "1491:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DaoVinciToken_$139",
                          "typeString": "contract super DaoVinciToken"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isApprovedForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1325,
                      "src": "1491:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view returns (bool)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1491:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 112,
                  "id": 136,
                  "nodeType": "Return",
                  "src": "1484:46:1"
                }
              ]
            },
            "documentation": "Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.\nhttps://docs.opensea.io/docs/1-structuring-your-smart-contract",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1147:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1170:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1137:55:1"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1226:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1225:6:1"
            },
            "scope": 139,
            "src": "1112:425:1",
            "stateMutability": "view",
            "superFunction": 1325,
            "visibility": "public"
          }
        ],
        "scope": 140,
        "src": "208:1331:1"
      }
    ],
    "src": "0:1540:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/stephenjackson/Code/Ethereum/leonardo-dao-vinci/contracts/DaoVinciToken.sol",
    "exportedSymbols": {
      "DaoVinciToken": [
        139
      ]
    },
    "id": 140,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 56,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-eth/contracts/ownership/Ownable.sol",
        "id": 57,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 1034,
        "src": "25:58:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 58,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 1741,
        "src": "84:68:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/stephenjackson/Code/Ethereum/leonardo-dao-vinci/contracts/ProxyRegistry.sol",
        "file": "./ProxyRegistry.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 151,
        "src": "153:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/stephenjackson/Code/Ethereum/leonardo-dao-vinci/contracts/Strings.sol",
        "file": "./Strings.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 474,
        "src": "183:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1740,
              "src": "234:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$1740",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "234:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1033,
              "src": "250:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1033",
                "typeString": "contract Ownable"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "250:7:1"
          }
        ],
        "contractDependencies": [
          716,
          776,
          786,
          1033,
          1685,
          1740,
          1846,
          1937
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 139,
        "linearizedBaseContracts": [
          139,
          1033,
          1740,
          716,
          1685,
          1846,
          776,
          786,
          1937
        ],
        "name": "DaoVinciToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 66,
            "name": "proxyRegistryAddress",
            "nodeType": "VariableDeclaration",
            "scope": 139,
            "src": "276:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 65,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "458:61:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "468:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "491:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "468:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "468:44:1"
                }
              ]
            },
            "documentation": null,
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 71,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 70,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1918,
                  "src": "439:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "439:11:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "408:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "407:31:1"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:1"
            },
            "scope": 139,
            "src": "388:131:1",
            "stateMutability": "nonpayable",
            "superFunction": 946,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "655:119:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87,
                          "name": "baseTokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "703:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view returns (string memory)"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "703:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 91,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "748:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 89,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 473,
                            "src": "731:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$473_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 472,
                          "src": "731:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "731:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "672:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$473_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strConcat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "672:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "672:95:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 84,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "665:102:1"
                }
              ]
            },
            "documentation": "@dev Returns an URI for a given token ID",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "601:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "600:18:1"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "640:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "639:15:1"
            },
            "scope": 139,
            "src": "583:191:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "840:83:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "68747470733a2f2f6f70656e7365612d6372656174757265732d6170692e6865726f6b756170702e636f6d2f6170692f63726561747572652f",
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "857:59:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b106c575404f790e4882ef772ce7c4fc1e1ad6500c34c8f127eaf119506874b7",
                      "typeString": "literal_string \"https://opensea-creatures-api.herokuapp.com/api/creature/\""
                    },
                    "value": "https://opensea-creatures-api.herokuapp.com/api/creature/"
                  },
                  "functionReturnParameters": 100,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "850:66:1"
                }
              ]
            },
            "documentation": null,
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "801:2:1"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "825:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "824:15:1"
            },
            "scope": 139,
            "src": "780:143:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "1236:301:1",
              "statements": [
                {
                  "assignments": [
                    114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 114,
                      "name": "proxyRegistry",
                      "nodeType": "VariableDeclaration",
                      "scope": 137,
                      "src": "1308:27:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ProxyRegistry_$150",
                        "typeString": "contract ProxyRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 113,
                        "name": "ProxyRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 150,
                        "src": "1308:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProxyRegistry_$150",
                          "typeString": "contract ProxyRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 118,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "proxyRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1352:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 115,
                      "name": "ProxyRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "1338:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ProxyRegistry_$150_$",
                        "typeString": "type(contract ProxyRegistry)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProxyRegistry_$150",
                      "typeString": "contract ProxyRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1308:65:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 122,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "1417:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 120,
                              "name": "proxyRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 114,
                              "src": "1395:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ProxyRegistry_$150",
                                "typeString": "contract ProxyRegistry"
                              }
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proxies",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 149,
                            "src": "1395:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_OwnableDelegateProxy_$142_$",
                              "typeString": "function (address) view external returns (contract OwnableDelegateProxy)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1395:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OwnableDelegateProxy_$142",
                            "typeString": "contract OwnableDelegateProxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OwnableDelegateProxy_$142",
                            "typeString": "contract OwnableDelegateProxy"
                          }
                        ],
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1387:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1387:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 125,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "1428:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1387:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 130,
                  "nodeType": "IfStatement",
                  "src": "1383:91:1",
                  "trueBody": {
                    "id": 129,
                    "nodeType": "Block",
                    "src": "1438:36:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1459:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 112,
                        "id": 128,
                        "nodeType": "Return",
                        "src": "1452:11:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1514:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "1521:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1998,
                        "src": "1491:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DaoVinciToken_$139",
                          "typeString": "contract super DaoVinciToken"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isApprovedForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1325,
                      "src": "1491:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view returns (bool)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1491:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 112,
                  "id": 136,
                  "nodeType": "Return",
                  "src": "1484:46:1"
                }
              ]
            },
            "documentation": "Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.\nhttps://docs.opensea.io/docs/1-structuring-your-smart-contract",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1147:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1170:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1137:55:1"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1226:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1225:6:1"
            },
            "scope": 139,
            "src": "1112:425:1",
            "stateMutability": "view",
            "superFunction": 1325,
            "visibility": "public"
          }
        ],
        "scope": 140,
        "src": "208:1331:1"
      }
    ],
    "src": "0:1540:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-02-16T06:39:35.970Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings. https://docs.opensea.io/docs/1-structuring-your-smart-contract"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}